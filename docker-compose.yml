version: '3.9'
services:

  #Frontend
  client:
    restart: unless-stopped
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile
    stdin_open: true
    tty: true
    environment:
      - NODE_ENV=development
      - CI=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.client.loadbalancer.server.port=3001"
      - "traefik.http.routers.client.rule=Host(`client.localhost`)"
      - "traefik.http.routers.client.entrypoints=web"

  #Backend
  app:
    restart: unless-stopped
    container_name: app
    build:
      context: ./server/laravel
      dockerfile: Dockerfile
    volumes:
      - ./server/laravel:/var/www
    depends_on:
      - db
      - traefik-proxy
      - ml-service
    environment:
      - APP_LOG_FILE=${APP_LOG_FILE}
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.app.loadbalancer.server.port=56"
      - "traefik.http.routers.app.rule=Host(`app.localhost`)"
      - "traefik.http.routers.app.entrypoints=web"
    env_file:
      - .env

  ml-service:
    restart: unless-stopped
    container_name: ml-service
    build:
      context: ./ml-service
      dockerfile: Dockerfile
   # labels:
    #  - "traefik.enable=true"
    #  - "traefik.http.services.ml-service.loadbalancer.server.port=9000"
   #   - "traefik.http.routers.ml-service.rule=Host(`ml-service.localhost`)"
    #  - "traefik.http.routers.ml-service.entrypoints=web"
    volumes:
      - ./ml-service:/usr/src/app
    ports:
      - ${ML_SERVICE_HOST_PORT:-9000}:${ML_SERVICE_CONTAINER_PORT:-9000}

  traefik-proxy:
    image: "traefik:v2.10"
    restart: unless-stopped
    container_name: traefik-proxy
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  db:
    image: postgres:15
    restart: unless-stopped
    container_name: db
    ports:
      - ${DB_PORT:-5432}:${DB_PORT:-5432}
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=${DB_DATABASE:-postgres}
      - POSTGRES_USER=${DB_USER:-root}
      - POSTGRES_PASSWORD=${DB_PASSWORD?}