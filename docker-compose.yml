version: '3.9'
services:

  #Frontend
  client:
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile
   # ports:
      #- ${CLIENT_HOST_PORT:-3001}:${CLIENT_CONTAINER_PORT:-3000}
    #  -
    stdin_open: true
    tty: true
    environment:
      - NODE_ENV=development
      - CI=true
      - VIRTUAL_PORT=3001
      - VIRTUAL_HOST=client.localhost

  #Backend
  app:
    container_name: app
    build:
      context: ./server/laravel
      dockerfile: Dockerfile
    volumes:
      - ./server/laravel:/var/www
    depends_on:
     # - web
      - db
      - nginx-proxy
    #  - rabbitmq
    environment:
      - APP_LOG_FILE=${APP_LOG_FILE}
      - VIRTUAL_PORT=56
      - VIRTUAL_HOST=app.localhost

    env_file:
      - .env

  ml-service:
    container_name: ml-service
    build:
      context: ./ml-service
      dockerfile: Dockerfile
    volumes:
      - ./ml-service:/usr/src/app
    ports:
      - ${ML_SERVICE_HOST_PORT:-9000}:${ML_SERVICE_CONTAINER_PORT:-9000}

  nginx-proxy:
    build:
      context: ./server/nginx-proxy
      dockerfile: Dockerfile
    container_name: nginx-proxy
    #environment:
     # - TRUST_DOWNSTREAM_PROXY=false
     # - HTTPS_METHOD=noredirect
    ports:
      - ${NGINX_PROXY_HOST_PORT:-80}:${NGINX_PROXY_CONTAINER_PORT:-80}
    volumes:
     # - /path/to/htpasswd:/etc/nginx/htpasswd
      #- /path/to/certs:/etc/nginx/certs
      - /var/run/docker.sock:/tmp/docker.sock:ro

  #NGINX
  web:
    build:
      context: ./server/nginx
      dockerfile: Dockerfile
    container_name: web
   # ports:
   #   - ${WEB_SERVER_PORT:-8080}:${WEB_SERVER_PORT:-8080}

    volumes:
      - ./server/laravel:/var/www

  db:
    image: postgres:15
    container_name: db
    ports:
      - ${DB_PORT:-5432}:${DB_PORT:-5432}
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=${DB_DATABASE:-postgres}
      - POSTGRES_USER=${DB_USER:-root}
      - POSTGRES_PASSWORD=${DB_PASSWORD?}

 # rabbitmq:
  #  image: rabbitmq:3-management-alpine
  #  container_name: rabbitmq
  #  ports:
  #    - '5672:5672'
  #    - '15672:15672'
  #  networks:
      #- rabbitmq_go_net

#networks:
 # rabbitmq_go_net:
  #  driver: bridge